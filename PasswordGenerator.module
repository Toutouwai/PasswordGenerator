<?php

/**
 *
 * Password Generator
 *
 * @author Robin Sallis
 *
 * ProcessWire 3.x
 * Copyright (C) 2011 by Ryan Cramer
 * Licensed under GNU/GPL v2, see LICENSE.TXT
 *
 * http://www.processwire.com
 * http://www.ryancramer.com
 *
 */

class PasswordGenerator extends WireData implements Module {

	/**
	 * Module information
	 */
	public static function getModuleInfo() {
		return array(
			'title' => 'Password Generator',
			'version' => '0.1.5',
			'author' => 'Robin Sallis',
			'href' => 'https://github.com/Toutouwai/PasswordGenerator',
			'summary' => 'Adds a password generator to InputfieldPassword.',
			'icon' => 'cogs',
			'autoload' => "template=admin",
		);
	}

	/**
	 * Ready
	 */
	public function ready() {
		$this->addHookAfter('InputfieldPassword::render', $this, 'addGenerator');
	}

	/**
	 * Add generator to InputfieldPassword
	 */
	public function addGenerator(HookEvent $event) {
		$inputfield = $event->object;
		$out = $event->return;

		// Get requirements of this password field
		$requirements = array(
			'lower' => 'false',
			'upper' => 'false',
			'digit' => 'false',
			'other' => 'false',
		);
		foreach($inputfield->requirements as $requirement) {
			if($requirement === 'letter') {
				$requirements['lower'] = 'true';
			} else {
				$requirements[$requirement] = 'true';
			}
		}

		// Add JS and CSS
		$info = $this->getModuleInfo();
		$version = $info['version'];
		$config = $this->config;
		$config->scripts->add($config->urls->$this . "pGenerator.jquery.js?v=$version");
		$config->styles->add($config->urls->$this . "{$this}.css?v={$version}");

		// Add password display div and initialise pGenerator
		$button_text = $this->_('Generate password');
		$name = $inputfield->name;
		// Set a sensible default length if the password field settings have not been saved
		$length = $inputfield->minlength ?: 10;
		$out .= "
<div class='password-display' id='pd-{$name}'>&nbsp;</div>
<a href='#' class='generate-password' id='gp-{$name}'>$button_text</a>
<script>
$(function() {
	var passwordElement{$name} = $('.Inputfield_{$name} input[type=password]:not(.InputfieldPasswordOld)');
	$('#gp-{$name}').pGenerator({
		'bind': 'click',
		'passwordElement': passwordElement{$name},
		'displayElement': '#pd-{$name}',
		'passwordLength': $length,
		'uppercase': {$requirements['upper']},
		'lowercase': {$requirements['lower']},
		'numbers': {$requirements['digit']},
		'specialChars': {$requirements['other']},
		'onPasswordGenerated': function() {
			passwordElement{$name}.focus().blur();
		}
	});
});
</script>
		";
		$event->return = $out;
	}

}
